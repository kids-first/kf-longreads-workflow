cwlVersion: v1.2
class: Workflow
id: kfdrc-pacbio-longreads-workflow
label: Kids First DRC PacBio LongReads Workflow
doc: |
  # Kids First Data Resource Center PacBio LongReads Workflows

  ![data service logo](https://github.com/d3b-center/d3b-research-workflows/raw/master/doc/kfdrc-logo-sm.png)

requirements:
- class: InlineJavascriptRequirement
- class: MultipleInputFeatureRequirement
- class: ScatterFeatureRequirement
- class: StepInputExpressionRequirement
- class: SubworkflowFeatureRequirement

inputs:
  input_unaligned_bam: { type: 'File', secondaryFiles: [{ pattern: '.bai', required: true }], doc: "" }
  indexed_reference_fasta: { type: 'File', secondaryFiles: [{ pattern: '.fai', required: true }], doc: "" }
  output_basename: { type: 'string', doc: "String to use as basename for all workflow outputs." }
  biospecimen_name: { type: 'string?', doc: "String name of the biospecimen. Providing this value will override the SM value provided in the input_unaligned_bam." }
  sentieon_license: { type: 'string', doc: "License server host and port for Sentieon tools." }
  pbmm2_preset:
    type:
      - 'null'
      - type: enum
        name: preset
        symbols: ["SUBREAD","CCS","HIFI","ISOSEQ","UNROLLED"]
    doc: |
      Set alignment mode. See below for preset parameter details.
      Alignment modes of --preset:
          SUBREAD     : -k 19 -w 10    -o 5 -O 56 -e 4 -E 1 -A 2 -B 5 -z 400 -Z 50  -r 2000   -L 0.5 -g 5000
          CCS or HiFi : -k 19 -w 10 -u -o 5 -O 56 -e 4 -E 1 -A 2 -B 5 -z 400 -Z 50  -r 2000   -L 0.5 -g 5000
          ISOSEQ      : -k 15 -w 5  -u -o 2 -O 32 -e 1 -E 0 -A 1 -B 2 -z 200 -Z 100 -r 200000 -L 0.5 -g 2000 -C 5 -G 200000
          UNROLLED    : -k 15 -w 15    -o 2 -O 32 -e 1 -E 0 -A 1 -B 2 -z 200 -Z 100 -r 2000   -L 0.5 -g 10000
  pbsv_hifi_preset: { type: 'boolean?', doc: "Use options optimized for HiFi/CCS reads: -y 97" }

  # Resource Control
  pbmm2_cores: { type: 'int?', doc: "CPU Cores for pbmm2 to use." }
  pbmm2_ram: { type: 'int?', doc: "RAM (in GB) for pbmm2 to use." }
  longreadsum_cores: { type: 'int?', doc: "CPU Cores for longreadsum to use." }
  dnascope_cores: { type: 'int?', doc: "CPU Cores for dnascope to use." }
  dnascope_ram: { type: 'int?', doc: "RAM (in GB) for dnascope to use." }
  pbsv_cores: { type: 'int?', doc: "CPU Cores for pbsv to use." }
  pbsv_ram: { type: 'int?', doc: "RAM (in GB) for pbsv to use." }
  sniffles_cores: { type: 'int?', doc: "CPU Cores for sniffles to use." }
  sniffles_ram: { type: 'int?', doc: "RAM (in GB) for sniffles to use." }

outputs:
  pbmm2_aligned_bam: { type: 'File', secondaryFiles: [{ pattern: '.bai', required: true }], outputSource: pbmm2_align/output_bam, doc: "BAM file and index generated by pbmm2" }
  longreadsum_bam_metrics: { type: 'File', outputSource: tar_longreadsum_dir/output, doc: "TAR.GZ file containing longreadsum-generated metrics." }
  dnascope_small_variants: { type: 'File', secondaryFiles: [{ pattern: '.tbi', required: true }], outputSource: dnascope/output_vcf, doc: "VCF.GZ file and index containing DNAscope-generated small variant calls." }
  pbsv_strucutural_variants: { type: 'File', secondaryFiles: [{ pattern: '.tbi', required: true }], outputSource: bgzip_tabix_index_pbsv_vcf/output, doc: "VCF.GZ file and index containing pbsv-generated SV calls." }
  sniffles_structural_variants: { type: 'File', secondaryFiles: [{ pattern: '.tbi', required: true }], outputSource: sniffles/output_vcf, doc: "VCF.GZ file and index containing sniffles-generated SV calls." }

steps:
  pbmm2_align:
    run: ../tools/pbmm2_align.cwl
    in:
      reference: indexed_reference_fasta
      input_reads: input_unaligned_bam
      output_filename:
        source: output_basename
        valueFrom: $(self).pbmm2.bam
      sort:
        valueFrom: $(1 == 1)
      preset: pbmm2_preset
      sample_name: biospecimen_name
      cores: pbmm2_cores
      ram: pbmm2_ram
    out: [output_bam]

  longreadsum:
    run: ../tools/longreadsum.cwl
    in:
      input_type:
        valueFrom: "bam"
      input_file: pbmm2_align/output_bam
      output_dir: output_basename
      output_basename: output_basename
      cores: longreadsum_cores
    out: [outputs]

  tar_longreadsum_dir:
    run: ../tools/tar.cwl
    in:
      output_filename:
        source: output_basename
        valueFrom: $(self).tar.gz
      input_dir: longreadsum/outputs
    out: [output]

  dnascope:
    run: ../tools/sentieon_DNAscope_LongRead.cwl
    in:
      sentieon_license: sentieon_license
      reference: indexed_reference_fasta
      input_bam: pbmm2_align/output_bam
      output_file_name:
        source: output_basename
        valueFrom: $(self).dnascope.vcf.gz
      cpu_per_job: dnascope_cores
      mem_per_job: dnascope_ram
    out: [output_vcf]

  pbsv_discover:
    run: ../tools/pbsv_discover.cwl
    in:
      input_bam: pbmm2_align/output_bam
      output_filename:
        source: output_basename
        valueFrom: $(self).pbsv.svsig.gz
      hifi_preset: pbsv_hifi_preset
      cores: pbsv_cores
      ram: pbsv_ram
    out: [output_svsig]

  pbsv_call:
    run: ../tools/pbsv_call.cwl
    in:
      reference_fasta: indexed_reference_fasta
      input_svsig: pbsv_discover/output_svsig
      output_filename:
        source: output_basename
        valueFrom: $(self).pbsv.vcf
      hifi_preset: pbsv_hifi_preset
      cores: pbsv_cores
      ram: pbsv_ram
    out: [output_vcf]

  bgzip_tabix_index_pbsv_vcf:
    run: ../tools/bgzip_tabix_index.cwl
    in:
      input_vcf: pbsv_call/output_vcf
      cores: pbsv_cores
    out: [output]

  sniffles:
    run: ../tools/sniffles.cwl
    in:
      input_bam:
        source: pbmm2_align/output_bam
        valueFrom: $([self])
      vcf_output_filename:
        source: output_basename
        valueFrom: $(self).sniffles.vcf.gz
      reference_fasta: indexed_reference_fasta
      cores: sniffles_cores
      ram: sniffles_ram
    out: [output_vcf, output_snf]

$namespaces:
  sbg: https://sevenbridges.com
hints:
- class: "sbg:maxNumberOfParallelInstances"
  value: 2
"sbg:license": Apache License 2.0
"sbg:publisher": KFDRC
"sbg:categories":
- ALIGNMENT
- DNA
- WGS
- WXS
"sbg:links":
- id: ''
  label: github-release
